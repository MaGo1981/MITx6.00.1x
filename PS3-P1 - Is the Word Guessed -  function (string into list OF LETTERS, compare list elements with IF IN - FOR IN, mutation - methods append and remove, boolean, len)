# Problem 1
# 
# Problem 1 - Is the Word Guessed
# 10.0 points possible (graded)
# Please read the Hangman Introduction before starting this problem. We'll start by writing 3 simple functions that will help us easily code the Hangman problem. First, implement the function isWordGuessed that takes in two parameters - a string, secretWord, and a list of letters, lettersGuessed. This function returns a boolean - True if secretWord has been guessed (ie, all the letters of secretWord are in lettersGuessed) and Falseotherwise.
# Example Usage:
# >>> secretWord = 'apple' 
# >>> lettersGuessed = ['e', 'i', 'k', 'p', 'r', 's']
# >>> print(isWordGuessed(secretWord, lettersGuessed))
# False
# For this function, you may assume that all the letters in secretWord and lettersGuessed are lowercase.
# Code Editor

def isWordGuessed(secretWord, lettersGuessed): # CLONE A STRING INTO A LIST, AND THAN COMPARE TWO LISTS WITH IF IN - FOR IN COMBINATION ELEMENT TO ELEMENT
    '''
    secretWord: string, the word the user is guessing
    lettersGuessed: list, what letters have been guessed so far
    returns: boolean, True if all the letters of secretWord are in lettersGuessed;
      False otherwise
    '''
    # FILL IN YOUR CODE HERE...
    secretClone = []
    for char in secretWord:
        secretClone.append(char) # string (secretWord) into list of letters (secretClone)
        if char in lettersGuessed: # if guess is good
            for letter in secretClone: # go through all letters
                if char == letter:# for each good guess => COMPARE ELEMENT TO ELEMENT
                    secretClone.remove(letter) #remove one letter from the list - mutation
    return len(secretClone) == 0 # if all letters removed return TRUE - word is guessed
